package ai_util

import (
	"testing"
)

func TestDecodingPrice(t *testing.T) {
	kEncryptionKey := []byte{0xb0, 0x8c, 0x70, 0xcf, 0xbc, 0xb0, 0xeb, 0x6c, 0xab, 0x7e, 0x82, 0xc6,
		0xb7, 0x5d, 0xa5, 0x20, 0x72, 0xae, 0x62, 0xb2, 0xbf, 0x4b, 0x99, 0x0b,
		0xb8, 0x0a, 0x48, 0xd8, 0x14, 0x1e, 0xec, 0x07}
	kIntegrityKey := []byte{0xbf, 0x77, 0xec, 0x55, 0xc3, 0x01, 0x30, 0xc1, 0xd8, 0xcd, 0x18, 0x62,
		0xed, 0x2a, 0x4c, 0xd2, 0xc7, 0x6a, 0xc3, 0x3b, 0xc0, 0xc4, 0xce, 0x8a,
		0x3d, 0x3b, 0xbd, 0x3a, 0xd5, 0x68, 0x77, 0x92}

	var kB64EncodedValue = "SjpvRwAB4kB7jEpgW5IA8p73ew9ic6VZpFsPnA"
	f, ret := DecodingPrice(kB64EncodedValue, kEncryptionKey, kIntegrityKey)
	if f {
		t.Log(ret)
	} else {
		t.Error("DecodingPrice fail")
	}

	eKey := []byte{0x00, 0x5e, 0x3a, 0x7b, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x07, 0xe8, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x13, 0xa0, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x1b, 0x70, 0xeb, 0xb7, 0xc3, 0xb5}
	iKey := []byte{0x00, 0x5e, 0x3a, 0x7b, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x3e, 0x98, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x4a, 0x50, 0x01, 0xba, 0x94, 0xcc, 0x04, 0x3d, 0x4e, 0x38, 0x0b, 0xaa, 0x42, 0x7f}
	encodePrice := "5FNf242htPqycwj1h2HqKVupMs7KxdO_2bY9sA"
	f, ret = DecodingPrice(encodePrice, eKey, iKey)
	if f {
		t.Log(ret)
	} else {
		t.Error("DecodingPrice fail")
	}
}
